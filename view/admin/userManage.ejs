<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="/stylesheet/admin/user.css">
    <script src="https://kit.fontawesome.com/197a2eac2f.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha384-BiVPcbB6SEt7Uizk4KthYl0IiIqK+k8TbHhZRHGp7v9GgDyDvR9CSy3Kb5ip1es5" crossorigin="anonymous">
    <link rel="icon" href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-people' viewBox='0 0 16 16'%3E%3Cpath d='M15 14s1 0 1-1-1-4-5-4-5 3-5 4 1 1 1 1zm-7.978-1L7 12.996c.001-.264.167-1.03.76-1.72C8.312 10.629 9.282 10 11 10c1.717 0 2.687.63 3.24 1.276.593.69.758 1.457.76 1.72l-.008.002-.014.002zM11 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m3-2a3 3 0 1 1-6 0 3 3 0 0 1 6 0M6.936 9.28a6 6 0 0 0-1.23-.247A7 7 0 0 0 5 9c-4 0-5 3-5 4q0 1 1 1h4.216A2.24 2.24 0 0 1 5 13c0-1.01.377-2.042 1.09-2.904.243-.294.526-.569.846-.816M4.92 10A5.5 5.5 0 0 0 4 13H1c0-.26.164-1.03.76-1.724.545-.636 1.492-1.256 3.16-1.275ZM1.5 5.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0m3-2a2 2 0 1 0 0 4 2 2 0 0 0 0-4'/%3E%3C/svg%3E" type="image/svg+xml">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
</head>
<style>



/* CSS for the modal */
.modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  
}

.modal-content {
  border-radius: 20px;
  background-color: #fefefe;
  margin: 15% auto;
  padding: 20px;
  border: 1px solid #888;
  width: 80%;
  max-width: 400px;
  text-align: center;
}

.modal-buttons button {
  border-radius: 15px;
  margin: 10px;
  background-color: #d9d3d3;
}

/* Show the modal when active */
.modal.active {
  display: block;
}

  /* Your existing styles here */
.sidebar {
 
    text-decoration: none;
    position: absolute;
    top: 75px; /* Height of the navbar */
    left: -250px; /* Initially hidden off-canvas */
    bottom: 0;
    width: 250px;
    background-color: #31473A; /* Same as navbar color */
    color: #fff; /* Text color */
    transition: left 0.3s ease; /* Smooth transition for opening and closing */
    z-index: 1000; /* Ensure sidebar is above other content */
}

.sidebar.show {
    left: 0; /* Show sidebar when .show class is added */
}

.sidebar ul {
    list-style-type: none;
    padding-left: 30px;
}

.sidebar li {
    margin-bottom: 40px;
}

.sidebar a {
    background-color: rgb(255, 255, 255);
    display: block;
    padding: 10px;
    color: #000000;
    text-decoration: none;
    border-radius: 20px;
    width: 210px;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
}

.sidebar a:hover {
    background-color: rgba(200, 200, 200, 0.5);
    text-decoration: none;
    color: #fff;
}
.custom-btn {
    background-color: #6c6464; /* Button background color */
    color: #fff; /* Text color */
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease; /* Smooth transition on hover */
}

.custom-btn:hover {
    background-color: #000000; /* Hover background color */
}
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgba(0, 0, 0, 0.4); /* Black with transparency */
  }

  /* Style the modal content */
  .modal-content {
    background-color: #fefefe;
    margin: 15% auto; /* 15% from the top and centered */
    padding: 20px;
    border: 1px solid #888;
    border-radius: 10px;
    width: 80%; /* 80% width */
    max-width: 400px; /* Maximum width */
  }

  /* Style the modal buttons */
  .modal-buttons {
    text-align: center;
  }

  .modal-buttons button {
    padding: 10px 20px;
    margin: 5px;
    border-radius: 5px;
    border: none;
    cursor: pointer;
    font-size: 16px;
  }

  /* Style the "Yes, Block" button */
  #confirmBlock {
    background-color: #f44336; /* Red */
    color: white;
  }

  /* Style the "Yes, Unblock" button */
  #confirmUnblock {
    background-color: #4CAF50; /* Green */
    color: white;
  }

  /* Style the "Cancel" button */
  #cancelBlock,
  #cancelUnblock {
    background-color: #ccc; /* Light grey */
    color: black;
  }

</style>
<body>
 
    

    
  
  <div class="navbar">
    <nav class="main-nav">
      <div>
        <button id="sidebar-toggle" class="sidebar-toggle-btn custom-btn"><i class="fas fa-bars"></i></button>
      </div>

      <div class="sidebar">
        <div id="accordion">
            <ul>
                <li><a href="/admin/Insite" data-tag="dashboard"><i class="fas fa-tachometer-alt"></i>Dashboard</a></li>
                <li><a href="/admin/UserManage" data-tag="dashboard"><i class="fas fa-tachometer-alt"></i>user manage</a></li>
                <li><a href="/admin/category" data-tag="category"><i class="fas fa-address-book"></i>Category Details</a></li>
                <li><a href="/admin/products" data-tag="product"><i class="fas fa-clone"></i>Product Details</a></li>
                <li><a href="/admin/order" data-tag="order"><i class="fas fa-calendar"></i>Order & Payment</a></li>
                <li><a href="/admin/getsalesReport" data-tag="sales"><i class="fas fa-chart-bar"></i>Sales Report</a></li>
              
                <li><a href="/admin/couponmanageadmin" data-tag="coupon"><i class="fas fa-copy"></i>Coupon</a></li>
                <li><a href="/adminlogout">Logout</a></li>

            </ul>
        </div>
      </div>
       

            <h1>Versatile</h1>
        
       
    </nav>
</div>


<div>
  <h2 class="user-management">user manage</h2>
      <form id="userManagementForm" action="/userAdmin" method="post"></form>
      <section class="user-management">
       
        <ul class="user-list">
            <!-- User 1 -->
            <li class="user-item">
              <span class="column1">No</span>
                <span class="column">Name</span>
                <span class="column">Email ID</span>
                <span class="column">Block/Unblock</span>
                <!-- <span class="column">Actions</span> -->
            </li>
            <% userFind.forEach((userFin,index) => { %>
            <li class="user-item">
              <span class="column1"> <%= index + 1 %></span>
                <span class="column"> <%= userFin.name %></span>
                <span class="column"><%= userFin.email %></span>
                <span class="column">
                  <button class="toggle-button <%= userFin.isBlocked ? 'unblocked-user' : 'blocked-user' %>" data-user-id="<%= userFin._id %>" data-is-blocked="<%= userFin.isBlocked %>">
                    <% if (userFin.isBlocked) { %>UNBLOCK<% } else { %>BLOCK<% } %>
                  </button>
                </span>
              
            </li>
          <% }); %>  
            <!-- Add more users as needed -->
        </ul>
       </section>
      </form>
      <!-- Modal for confirmation -->
<div id="confirmationModal" class="modal">
  <div class="modal-content">
    <p>Are you sure you want to block this user?</p>
    <div class="modal-buttons">
      <button id="confirmBlock">Yes, Block</button>
      <button id="cancelBlock">Cancel</button>
    </div>
  </div>
</div>

      <!-- Modal for unblock confirmation -->
<div id="unblockConfirmationModal" class="modal">
  <div class="modal-content">
    <p>Are you sure you want to unblock this user?</p>
    <div class="modal-buttons">
      <button id="confirmUnblock">Yes, Unblock</button>
      <button id="cancelUnblock">Cancel</button>
    </div>
  </div>
</div>

    
  </div>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#sidebar-toggle').click(function () {
            $('.sidebar').toggleClass('show'); // Toggle .show class on sidebar
        });
    });
</script>

    <script>
document.addEventListener('DOMContentLoaded', () => {
  const toggleButtons = document.querySelectorAll('.toggle-button');
  const confirmationModal = document.getElementById('confirmationModal');
  const confirmBlockBtn = document.getElementById('confirmBlock');
  const cancelBlockBtn = document.getElementById('cancelBlock');
  const unblockConfirmationModal = document.getElementById('unblockConfirmationModal');
  const confirmUnblockBtn = document.getElementById('confirmUnblock');
  const cancelUnblockBtn = document.getElementById('cancelUnblock');

  let activeButton = null;

  toggleButtons.forEach(button => {
    button.addEventListener('click', (event) => {
      const userId = button.getAttribute('data-user-id');
      const isBlocked = button.getAttribute('data-is-blocked') === 'true';
      activeButton = button;

      if (!isBlocked) {
        confirmationModal.classList.add('active');
      } else {
        unblockConfirmationModal.classList.add('active');
      }
    });
  });

  confirmBlockBtn.addEventListener('click', () => {
    if (activeButton) {
      const userId = activeButton.getAttribute('data-user-id');
      toggleUserBlock(userId, true);
      confirmationModal.classList.remove('active');
    }
  });

  cancelBlockBtn.addEventListener('click', () => {
    confirmationModal.classList.remove('active');
  });

  confirmUnblockBtn.addEventListener('click', () => {
    if (activeButton) {
      const userId = activeButton.getAttribute('data-user-id');
      toggleUserBlock(userId, false);
      unblockConfirmationModal.classList.remove('active');
    }
  });

  cancelUnblockBtn.addEventListener('click', () => {
    unblockConfirmationModal.classList.remove('active');
  });

  async function toggleUserBlock(userId, isBlocked) {
    try {
      const response = await fetch(`/blockUser/${userId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ isBlocked }),
      });

      if (!response.ok) {
        throw new Error('Failed to update user status.');
      }

      const data = await response.json();
      activeButton.textContent = data.isBlocked ? 'UNBLOCK' : 'BLOCK';
      activeButton.classList.toggle('unblocked-user', data.isBlocked);
      activeButton.classList.toggle('blocked-user', !data.isBlocked);
      activeButton.setAttribute('data-is-blocked', data.isBlocked);

      if (data.isBlocked) {
        activeButton.closest('.user-item').classList.add('directly-blocked');
      } else {
        activeButton.closest('.user-item').classList.remove('directly-blocked');
      }
    } catch (error) {
      console.error('Error updating user status:', error);
    }
  }
});

</script>
</body>
</html>