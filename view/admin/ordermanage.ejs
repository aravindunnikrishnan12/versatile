<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="/stylesheet/admin/ordermanage.css">
    <script src="https://kit.fontawesome.com/197a2eac2f.js" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <link rel="icon" href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-box-seam-fill' viewBox='0 0 16 16'%3E%3Cpath fill-rule='evenodd' d='M15.528 2.973a.75.75 0 0 1 .472.696v8.662a.75.75 0 0 1-.472.696l-7.25 2.9a.75.75 0 0 1-.557 0l-7.25-2.9A.75.75 0 0 1 0 12.331V3.669a.75.75 0 0 1 .471-.696L7.443.184l.01-.003.268-.108a.75.75 0 0 1 .558 0l.269.108.01.003zM10.404 2 4.25 4.461 1.846 3.5 1 3.839v.4l6.5 2.6v7.922l.5.2.5-.2V6.84l6.5-2.6v-.4l-.846-.339L8 5.961 5.596 5l6.154-2.461z'/%3E%3C/svg%3E" type="image/svg+xml">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <!-- DataTable HEADER-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css">
<!-- Bootstrap CSS -->
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

    <style>
      .container {
    width: 90%;
    max-width: 1400px;
    margin: auto;
    padding: 20px;
    border: 1px solid #b8b8b8;
    background-color: #ffffffdc;
    border-radius: 10px;
    box-shadow: 0 0 5px rgba(1, 2, 3, 1.1);
    position: relative;
    height: auto; /* Adjusted to auto to allow proper height adjustment on different screens */
    margin-top: 30px;
}
     
        h1 {
            font-size: 28px;
            margin-bottom: 40px;
            text-align: center;
        
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ffffff;
        }

        th {
            background-color: #4d4545;
        }

        tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .status-confirmed {
            color: rgb(0, 0, 0);
        }

        .status-dispatched {
            color: blue;
        }

        .status-out-for-delivery {
            color: rgb(141, 133, 118);
        }

        @media only screen and (max-width: 768px) {
            table {
                display: block;
                overflow-x: auto;
                white-space: nowrap;
            }

            th, td {
                display: block;
                width: 100%;
            }
        }

        tr:hover {
            background-color: #fff3e1;
        }

      

        .price-filter input[type="number"],
    .price-filter button {
        padding: 8px;
        border-radius: 5px;
        border: 1px solid #ddd;
        margin-right: 5px;
        font-size: 14px;
        transition: all 0.3s ease;
    }

    .price-filter input[type="number"] {
        width: 100px;
    }

    .price-filter button {
        background-color: #000;
        color: #fff;
        cursor: pointer;
    }

    .price-filter button:hover {
        background-color: #333;
    }
        .price-filter {
           
            position: absolute;
            top: 30px; /* Adjust the top position as needed */
            left: 70%;
        }


        .black-button {
    background-color: rgb(92, 84, 84);
    color: white;
    border-radius: 5px;
}
.search-bar {
        display: flex;
        align-items: center;
        margin-left: 20px;
    }
    
    .search-input {
        padding: 8px 12px;
        border-radius: 20px;
        border: 1px solid #ccc;
        outline: none;
    }
    
    .search-button {
        background-color: #31473A;
        color: #fff;
        border: none;
        border-radius: 20px;
        padding: 8px 12px;
        margin-left: 10px;
        cursor: pointer;
    }

  /* Your existing styles here */
  .sidebar {
    text-decoration: none;
    position: fixed;
    top: 75px; /* Height of the navbar */
    left: -250px; /* Initially hidden off-canvas */
    bottom: 0;
    width: 250px;
    background-color: #31473A; /* Same as navbar color */
    color: #fff; /* Text color */
    transition: left 0.3s ease; /* Smooth transition for opening and closing */
    z-index: 1000; /* Ensure sidebar is above other content */
}

.sidebar.show {
    left: 0; /* Show sidebar when .show class is added */
}

.sidebar ul {
    list-style-type: none;
    padding-left: 30px;
}

.sidebar li {
    margin-bottom: 40px;
}

.sidebar a {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    background-color: rgb(255, 255, 255);
    display: block;
    padding: 10px;
    color: #000000;
    text-decoration: none;
    border-radius: 20px;
    width: 210px;
}

.sidebar a:hover {
    background-color: rgba(200, 200, 200, 0.5);
    text-decoration: none;
    color: #fff;
}


.custom-btn {
    background-color: #4d4f52; /* Button background color */
    color: #fff; /* Text color */
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease; /* Smooth transition on hover */
}

.custom-btn:hover {
    background-color: #000000; /* Hover background color */
}


#paginationContainer {
  margin-top: 10px;
}

#paginationContainer button {
  margin-right: 5px;
}
#paginationContainer {
        text-align: right;
    }

    #prevPageBtn,
    #nextPageBtn {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 8px 16px;
        margin-left: 5px;
        border-radius: 4px;
        cursor: pointer;
    }

    #prevPageBtn[disabled],
    #nextPageBtn[disabled] {
        background-color: #ccc;
        color: #666;
        cursor: not-allowed;
    }
    thead {
      
        color: white;
    }


/* Modal Content */
.modal-content {
    overflow: hidden;
}

/* Modal Body (for the table) */
.modal-body {
    max-height: 60vh; /* Adjust as needed */
    overflow-y: auto;
}

/* Responsive Image in Table */
#orderDetailsTable img {
    max-width: 100%;
    height: auto;
}


/* Media Queries */
@media only screen and (max-width: 1200px) {
    .price-filter {
        left: 60%;
    }
}

@media only screen and (max-width: 768px) {
    table {
        display: block;
        overflow-x: auto;
        white-space: nowrap;
    }

    th, td {
        display: block;
        width: 100%;
    }

    .price-filter {
        position: static;
        margin-top: 10px;
        text-align: center;
    }
}

@media only screen and (max-width: 480px) {
    .container {
        padding: 10px;
    }

    h1 {
        font-size: 24px;
    }

    th, td {
        padding: 8px;
    }

    .price-filter {
        left: 50%;
        transform: translateX(-50%);
    }
}

    </style>
</head>
<body>
    
    

    
   
    <div class="navbar">
        <nav class="main-nav">
            <div>
                <button id="sidebar-toggle" class="sidebar-toggle-btn custom-btn"><i class="fas fa-bars"></i></button>
              </div>
              <div class="sidebar">
                <div id="accordion">
                    <ul>
                        <li><a href="/admin/Insite" data-tag="dashboard"><i class="fas fa-tachometer-alt"></i>Dashboard</a></li>
                        <li><a href="/admin/UserManage" data-tag="dashboard"><i class="fas fa-tachometer-alt"></i>user manage</a></li>
                        <li><a href="/admin/category" data-tag="category"><i class="fas fa-address-book"></i>Category Details</a></li>
                        <li><a href="/admin/products" data-tag="product"><i class="fas fa-clone"></i>Product Details</a></li>
                        <li><a href="/admin/order" data-tag="order"><i class="fas fa-calendar"></i>Order & Payment</a></li>
                        <li><a href="/admin/getsalesReport" data-tag="sales"><i class="fas fa-chart-bar"></i>Sales Report</a></li>
                     
                        <li><a href="/admin/couponmanageadmin" data-tag="coupon"><i class="fas fa-copy"></i>Coupon</a></li>
                        <li><a href="/adminlogout">Logout</a></li>
                    </ul>
                </div>
              </div>
            <div>
                <h1>Versatile</h1>
            </div>
            <div class="search-bar">
              <input type="text" placeholder="Search..." class="search-input">
              <button type="button" class="search-button"><i class="fas fa-search"></i></button>
          </div>
    
     
        
        </nav>
    </div>
  <div class="container">
  
      
  <bold>
  <h1 style="font-weight: bold;">Order details</h1>
    </bold>
    
    <table id="example" style="width:100%">

        <thead>
            <tr>
                <th>Order name</th>
                <th>User Id</th>
                <th>Address</th>
                <th>quantity</th>
                
                <th>Total Price</th>
                <th>Date & Time</th>
                <th>Payment Method</th>
                <th>Actions</th>
                <th>request</th>
                <th>details</th>
            </tr>
        </thead>

        
        <tbody>
            <% orders.reverse().forEach(order => { 
                order.products.forEach(product => { %>
                    <tr class="order-row" data-order-id="<%= order._id %>" data-product-id="<%= product.productId %>">
                        
                        <td><%= product.productName %></td>
                        <td><%= order.user ? order.user.name : 'User not found' %></td> 
                        <td><%= order.address.address1 %>, <%= order.address.street %>, <%= order.address.country %>, <%= order.address.pincode %></td>
                        <td><%= product.quantity %></td>
                        <td><%= order.totalPrice %></td>
                        <td><%= new Date(order.orderDate).toLocaleString([], { year: 'numeric', month: 'numeric', day: 'numeric', hour: '2-digit', minute: '2-digit' }) %></td>
                        <td><%= order.paymentMethod %></td>
                        <td>
                            <% if (product.status === "Cancelled") { %>
                                <button class="black-button" onclick="showCancellationReason('<%= product.reason %>')">Cancelled</button>
                            <% } else if (product.status === "Returned" || order.adminApproval === 'Approved') { %>
                                <button class="black-button" onclick="showCancellationReason('<%= product.reason %>')">Returned</button>
                            <% } else if (product.status === "failed") { %>
                                <button class="black-button">Payment failed</button>
                            <% } else { %>
                                <select id="orderStatusDropdown" onchange="updateOrderStatus('<%= order._id %>', '<%= product.productId %>', event)">
                                    <option value="pending" <%= order.status === "Pending" ? 'selected' : '' %>>Pending</option>
                                    <option value="processing" <%= order.status === "Processing" ? 'selected' : '' %>>Processing</option>
                                    <option value="shipped" <%= order.status === "Shipped" ? 'selected' : '' %>>Shipped</option>
                                    <option value="delivered" <%= order.status === "Delivered" ? 'selected' : '' %>>Delivered</option>
                                    <option value="Cancelled" <%= order.status === "Cancelled" ? 'selected' : '' %>>Cancelled</option>
                                </select>
                            <% } %>
                        </td>
                        <td>
                            <% if (product.status === 'delivered') { %>
                                <% if (order.adminApproval && order.adminApproval !== 'Approved' && order.adminApproval !== 'Rejected') { %>
                                    <select id="adminApprovalDropdown" onchange="updateAdminApproval('<%= order._id %>', this.value)">
                                        <option value="Pending" <%= order.adminApproval === "Pending" ? 'selected' : '' %>>Pending</option>
                                        <option value="Approved" <%= order.adminApproval === "Approved" ? 'selected' : '' %>>Approved</option>
                                        <option value="Rejected" <%= order.adminApproval === "Rejected" ? 'selected' : '' %>>Rejected</option>
                                    </select>
                                <% } else if (order.adminApproval === 'Approved') { %>
                                    Approved
                                <% } else if (order.adminApproval === 'Rejected') { %>
                                    Rejected
                                <% } else { %>
                                    Admin approval not required
                                <% } %>
                            <% } else { %>
                                Admin approval not required
                            <% } %>
                        </td>
                        
                        
                        <td>
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#orderDetailsModal" onclick="showOrderDetails('<%= JSON.stringify(order) %>')">Details</button>
                        </td>
                    </tr>
                <% }); 
            }); %>
        </tbody>


        
    </table>
    <div id="paginationContainer">
        <button id="prevPageBtn" disabled>Previous</button>
        <button id="nextPageBtn">Next</button>
      </div>
      
</div>
<!-- Modal -->
<!-- Modal for Order Details -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
               
            </div>
            <div class="modal-body">
                <table id="orderDetailsTable" class="table table-striped">
                    <!-- Order details will be dynamically added here -->
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

  

  <script>
const updateAdminApproval = async (orderId, adminApproval) => {
    try {
        const response = await fetch('/updateAdminApproval', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ orderId, adminApproval })
        });

        if (!response.ok) {
            throw new Error('Failed to update admin approval status');
        }

        const data = await response.json();
        console.log(data); // Handle success response
    } catch (err) {
        console.error(err); // Handle error
    }
};

  </script>

  <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Bootstrap Bundle with Popper.js -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>



<script>
    document.addEventListener('DOMContentLoaded', function () {
  const table = document.getElementById('example');
  const rows = table.getElementsByTagName('tr');
  const rowsPerPage = 6;
  let currentPage = 1;

  function showPage(pageNumber) {
    const startIndex = (pageNumber - 1) * rowsPerPage;
    const endIndex = pageNumber * rowsPerPage;

    for (let i = 0; i < rows.length; i++) {
      if (i >= startIndex && i < endIndex) {
        rows[i].style.display = '';
      } else {
        rows[i].style.display = 'none';
      }
    }
  }

  function updatePaginationButtons() {
    const totalPages = Math.ceil(rows.length / rowsPerPage);

    document.getElementById('prevPageBtn').disabled = currentPage === 1;
    document.getElementById('nextPageBtn').disabled = currentPage === totalPages;
  }

  function goToPrevPage() {
    if (currentPage > 1) {
      currentPage--;
      showPage(currentPage);
      updatePaginationButtons();
    }
  }

  function goToNextPage() {
    const totalPages = Math.ceil(rows.length / rowsPerPage);
    if (currentPage < totalPages) {
      currentPage++;
      showPage(currentPage);
      updatePaginationButtons();
    }
  }

  document.getElementById('prevPageBtn').addEventListener('click', goToPrevPage);
  document.getElementById('nextPageBtn').addEventListener('click', goToNextPage);

  showPage(currentPage);
  updatePaginationButtons();
});

</script>

<script>
    function showOrderDetails(orderJson) {
        const order = JSON.parse(orderJson);

        const modalTitle = document.getElementById('orderDetailsModalLabel');
        modalTitle.textContent = `Order Details - Order ID: ${order._id}`;

        const orderDetailsTable = document.getElementById('orderDetailsTable');
        orderDetailsTable.innerHTML = ''; // Clear 
        const thead = document.createElement('thead');
    thead.innerHTML = `
       
        <tr>
           
            <th colspan="10">Username: ${ order.user ? order.user.name : 'User not found'}</th>
        </tr>
        <tr>
            <th colspan="10">Total Price: ${order.totalPrice}</th>
        </tr>

        <tr>
            <th colspan="10">Total Quantity: ${order.totalQuantity}</th>
        </tr>
        <tr>
            <th>Product Image</th>
            <th>Product Name</th>
            <th>address</th>
            <th>quantity</th>
            <th>price</th>
            <th>date</th>
            <th>payment method</th>
            <th>Status</th>
            <th></th>
            <th>order id </th>
        </tr>
    `;
    orderDetailsTable.appendChild(thead);

        const tbody = document.createElement('tbody');

        order.products.forEach(product => {
            const tr = document.createElement('tr');
            tr.innerHTML = `
                <td><img src="${product.productImage[0]}" alt="${product.productName}" style="max-width: 100px;"></td>
                <td>${product.productName}</td>
                <td>${order.address.address1}, ${order.address.street}, ${order.address.country}, ${order.address.pincode}</td>
                <td>${product.quantity}</td>
                <td>${product.price}</td>
                <td>${new Date(order.orderDate).toLocaleString([], { year: 'numeric', month: 'numeric', day: 'numeric', hour: '2-digit', minute: '2-digit' })}</td>
                <td>${order.paymentMethod}</td>
                <td>${product.status}</td>
                <td>${product.reason || ''}</td>
                <td colspan="9">Order ID: ${order._id}</td>
            `;
            tbody.appendChild(tr);
        });

        orderDetailsTable.appendChild(tbody);
    }
</script>



<!-- Bootstrap JS and dependencies (Popper.js and jQuery) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>



<script>
// Function to update order status
function updateOrderStatus(orderId, productId, event) {
    const newStatus = event.target.value;
    console.log("New status:", newStatus);
    
    // Save the selected status in local storage
    localStorage.setItem(`orderStatus_${orderId}_${productId}`, newStatus);
    
    fetch('/OrderStatus', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ orderId: orderId, productId: productId, newStatus: newStatus }),
    }).then(response => {
        if (response.ok) {
            return response.json();
        }
        throw new Error('Network response was not ok.');
    }).then(data => {
        console.log(data);
        // Optionally, refresh the page or show a success message
    }).catch(error => {
        console.error('Error:', error);
        // Handle error
    });
}

// Function to get the selected order status from local storage
function getOrderStatus(orderId, productId) {
    return localStorage.getItem(`orderStatus_${orderId}_${productId}`);
}

// Add this code to restore the selected status when the page loads
document.addEventListener("DOMContentLoaded", function() {
    const orderRows = document.querySelectorAll(".order-row");
    orderRows.forEach(row => {
        const orderId = row.dataset.orderId;
        const productId = row.dataset.productId;
        const selectElement = row.querySelector("#orderStatusDropdown");
        if (selectElement) {
            const savedStatus = getOrderStatus(orderId, productId);
            if (savedStatus) {
                selectElement.value = savedStatus;
            }
        }
    });
});



function showCancellationReason(reason) {
    // Display SweetAlert to show the cancellation reason
    Swal.fire({
        title: 'Reason',
        text: reason,
        icon: 'info'
    });
}


</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#sidebar-toggle').click(function () {
            $('.sidebar').toggleClass('show'); // Toggle .show class on sidebar
        });
    });
</script>
<script src="/path/to/sweetalert2.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>



</body>
</html>